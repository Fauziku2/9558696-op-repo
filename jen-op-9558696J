pipeline {
  agent any

  stages {

    stage('Op-9558696J-S1: Backup and Update QA') {
      steps {
        sh '''#!/bin/bash
        docker image rm -f qa-bkup-image || true
        docker commit 9558696j-qa-svr qa-bkup-image

        mkdir -p /operate

        puppet resource file /operate/9558696J ensure=absent force=true
        puppet resource file /operate/9558696J ensure=directory

        cd /operate/9558696J
        git clone https://github.com/Fauziku2/9558696J-op-repo.git

        locate_script='/operate/9558696J/9558696J-op-repo/9558696J_script'
        bolt script run $locate_script -t 9558696j-qa-svr.localdomain -u clientadm -p user123 --no-host-key-check --run-as root
        '''
      }
    }

    stage('Op-9558696J-S2: Verify QA Web Page') {
      steps {
        sh '''
        curl -s http://9558696j-qa-svr.localdomain | grep "9558696J" || (echo "QA update failed" && exit 1)
        '''
      }
    }

    stage('Op-9558696J-S3: Rollback if QA Fails') {
      steps {
        sh '''
        if ! curl -s http://9558696j-qa-svr.localdomain | grep -q "9558696J"; then
          echo "Rolling back to backup image..."
          docker stop 9558696j-qa-svr
          docker rm 9558696j-qa-svr
          docker run -d -p 8081:80 --name 9558696j-qa-svr qa-bkup-image
        else
          echo "QA verification successful, no rollback needed."
        fi
        '''
      }
    }

    stage('Op-9558696J-S4: Backup and Update Prod') {
      steps {
        sh '''#!/bin/bash
        docker image rm -f prod-bkup-image || true
        docker commit 9558696j-prod-svr prod-bkup-image

        mkdir -p /operate

        puppet resource file /operate/9558696J ensure=absent force=true
        puppet resource file /operate/9558696J ensure=directory

        cd /operate/9558696J
        git clone https://github.com/Fauziku2/9558696J-op-repo.git

        locate_script='/operate/9558696J/9558696J-op-repo/9558696J_script'
        bolt script run $locate_script -t 9558696j-prod-svr.localdomain -u clientadm -p user123 --no-host-key-check --run-as root
        '''
      }
    }

    stage('Op-9558696J-S5: Verify Prod Web Page') {
      steps {
        sh '''
        curl -s http://9558696j-prod-svr.localdomain | grep "9558696J" || (echo "Prod update failed" && exit 1)
        '''
      }
    }

    stage('Op-9558696J-S6: Rollback if Prod Fails') {
      steps {
        sh '''
        if ! curl -s http://9558696j-prod-svr.localdomain | grep -q "9558696J"; then
          echo "Rolling back to backup image..."
          docker stop 9558696j-prod-svr
          docker rm 9558696j-prod-svr
          docker run -d -p 8082:80 --name 9558696j-prod-svr prod-bkup-image
        else
          echo "Prod verification successful, no rollback needed."
        fi
        '''
      }
    }

    stage('Op-9558696J-S7: Monitoring Message') {
      steps {
        echo 'Both QA and Prod servers updated and verified successfully. Monitoring can begin.'
      }
    }

  }
}
